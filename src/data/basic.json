[
  {
    "name": "concat",
    "inputOp": "concat",
    "args": []
  }, {
    "name": "range",
    "args": [
      {
        "name": "from",
        "type": "int"
      }, {
        "name": "count",
        "type": "int"
      }
    ]
  }, {
    "name": "timer",
    "args": [
      {
        "name": "dueTime",
        "type": "int"
      }, {
        "name": "period",
        "type": "int",
        "min": 50,
        "units": "ms"
      }
    ]
  }, {
    "name": "interval",
    "inputOp": "merge",
    "args": [
      {
        "name": "interval",
        "type": "int",
        "min": 50,
        "units": "ms"
      }
    ]
  }, {
    "name": "delay",
    "inputOp": "merge",
    "args": [
      {
        "name": "delay",
        "type": "int",
        "min": 0,
        "units": "ms"
      }
    ]
  }, {
    "name": "map",
    "inputOp": "merge",
    "args": [
      {
        "name": "selector",
        "type": "function"
      }
    ]
  }, {
    "name": "reduce",
    "inputOp": "merge",
    "args": [
      {
        "name": "accumulator",
        "type": "function"
      },
      {
        "name": "seed",
        "type": "any"
      }
    ]
  }, {
    "name": "filter",
    "inputOp": "merge",
    "args": [
      {
        "name": "predicate",
        "type": "function"
      }
    ]
  }, {
    "name": "flatMap",
    "inputOp": "merge",
    "args": [
      {
        "name": "selector",
        "type": "function"
      }
    ]
  }, {
    "name": "take",
    "inputOp": "merge",
    "args": [
      {
        "name": "count",
        "type": "int"
      }
    ]
  }, {
    "name": "window",
    "inputOp": "merge",
    "args": [
      {
        "name": "selector",
        "type": "function"
      }
    ]
  }
]
